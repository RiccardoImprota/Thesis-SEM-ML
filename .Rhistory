print(4)
R
R.version()
R.version
knitr::opts_chunk$set(echo = TRUE)
setwd("C:\\Users\\ricca\\OneDrive\\Documenti\\Tesi Materiale")
knitr::opts_chunk$set(echo = TRUE,root.dir = "C:\\Users\\ricca\\OneDrive\\Documenti\\Tesi Materiale")
getwd()
knitr::opts_chunk$set(echo = TRUE,root.dir = "C:\\Users\\ricca\\OneDrive\\Documenti\\Tesi Materiale\\Codice")
getwd()
getwd()
getwd()
install.packages("haven")
library(haven)
rscodeio::install_theme()
remotes::install_github("anthonynorth/rscodeio")
rscodeio::install_theme()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:\\Users\\ricca\\OneDrive\\Documenti\\Tesi Materiale")
```{r setup, include=FALSE}
## Exploring data
```{r}
```{r setup, include=FALSE}
```{r setup, include=FALSE}
## Exploring data
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:\\Users\\ricca\\OneDrive\\Documenti\\Tesi Materiale")
# Load the necessary library
library(sjlabelled)
# Read the .dta file
sourcedf <- read_stata("Dati//UKDA-9026-stata//stata//stata13//ewcts_2021_isco2_nace2_nuts2.dta")
duemilaquindicidf<-read_stata("Dati//UKDA-8098-stata//stata//stata13//ewcs6_2015_ukda_1904.dta")
View(sourcedf)
names(attributes(sourcedf$SurveyCombination_M1)$labels)
names(attributes(sourcedf$SurveyCombination_M2)$labels)
setwd("~/GitHub/Thesis-SEM-ML/Source/Defining Dimensions")
setwd("~/GitHub/Thesis-SEM-ML")
# load the necessary packages
suppressPackageStartupMessages(library(lavaan, quietly=TRUE, warn.conflicts=FALSE))
library(readr, quietly=TRUE, warn.conflicts=FALSE)  # Data import
library(psych, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
library(dplyr, quietly=TRUE, warn.conflicts=FALSE)
library(purrr, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
source("Source/DataPreparation/functions.R")
# Importing the two datasets
completedf <-read_csv("data\\processed\\df_reversed.csv", show_col_types = FALSE)
EGAdimensions <-suppressMessages(read_csv2("data\\EGAdimensions.csv", show_col_types = FALSE))
# load the necessary packages
suppressPackageStartupMessages(library(lavaan, quietly=TRUE, warn.conflicts=FALSE))
library(readr, quietly=TRUE, warn.conflicts=FALSE)  # Data import
library(psych, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
library(dplyr, quietly=TRUE, warn.conflicts=FALSE)
library(purrr, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
source("Source/DataPreparation/functions.R")
# Importing the two datasets
completedf <-read_csv("data\\processed\\df_reversed.csv", show_col_types = FALSE)
EGAdimensions <-suppressMessages(read_csv2("data\\EGAdimensions.csv", show_col_types = FALSE))
# load the necessary packages
suppressPackageStartupMessages(library(lavaan, quietly=TRUE, warn.conflicts=FALSE))
library(readr, quietly=TRUE, warn.conflicts=FALSE)  # Data import
library(psych, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
library(dplyr, quietly=TRUE, warn.conflicts=FALSE)
library(purrr, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
source("Source/DataPreparation/functions.R")
# Importing the two datasets
completedf <-read_csv("data\\processed\\df_reversed.csv", show_col_types = FALSE)
EGAdimensions <-suppressMessages(read_csv2("data\\EGAdimensions.csv", show_col_types = FALSE))
# Removing the variables to remove numerical and dichotomic
completedf <- completedf %>% select(EGAdimensions$names,eng_energy,eng_enthusiastic,eng_timeflies)
# Creating the string for the model
model_string <- map_chr(unique(EGAdimensions$EGA_dimension), function(dimension) {
factor_variables <- EGAdimensions$names[EGAdimensions$EGA_dimension == dimension]
# If there are only two observed variables, fix lambda
if(length(factor_variables) == 2) {
return(paste(dimension, " =~ lambda*", factor_variables[1], "+ lambda*", factor_variables[2], ";"))
}
# Otherwise, return the regular line
paste(dimension, " =~ ", paste(factor_variables, collapse = " + "), ";")
})
# Append the additional line to model_string
model_string <- paste(c(model_string, "Work Engagement =~ eng_energy + eng_enthusiastic + eng_timeflies;"), collapse = " ")
fit <- cfa(model_string, data=completedf, estimator="WLSMV", missing = "pairwise",ordered=TRUE)
summary(fit, fit.measures = TRUE, standardized = T)
# Compute factor scores
factor_scores <- lavPredict(fit, type="lv", method="ebm")
# Update 'completedf' by removing the old variables, keeping a few specific ones,
# and adding in the new factor scores
fit <- fit %>%
select(-all_of(EGAdimensions$names)) %>%
bind_cols(factor_scores_train)
# load the necessary packages
suppressPackageStartupMessages(library(lavaan, quietly=TRUE, warn.conflicts=FALSE))
library(readr, quietly=TRUE, warn.conflicts=FALSE)  # Data import
library(psych, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
library(dplyr, quietly=TRUE, warn.conflicts=FALSE)
library(purrr, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
source("Source/DataPreparation/functions.R")
# Importing the two datasets
completedf <-read_csv("data\\processed\\df_reversed.csv", show_col_types = FALSE)
EGAdimensions <-suppressMessages(read_csv2("data\\EGAdimensions.csv", show_col_types = FALSE))
# Removing the variables to remove numerical and dichotomic
completedf <- completedf %>% select(EGAdimensions$names,eng_energy,eng_enthusiastic,eng_timeflies)
# Creating the string for the model
model_string <- map_chr(unique(EGAdimensions$EGA_dimension), function(dimension) {
factor_variables <- EGAdimensions$names[EGAdimensions$EGA_dimension == dimension]
# If there are only two observed variables, fix lambda
if(length(factor_variables) == 2) {
return(paste(dimension, " =~ lambda*", factor_variables[1], "+ lambda*", factor_variables[2], ";"))
}
# Otherwise, return the regular line
paste(dimension, " =~ ", paste(factor_variables, collapse = " + "), ";")
})
# Append the additional line to model_string
model_string <- paste(c(model_string, "Work Engagement =~ eng_energy + eng_enthusiastic + eng_timeflies;"), collapse = " ")
fit <- cfa(model_string, data=completedf, estimator="WLSMV", missing = "pairwise",ordered=TRUE)
summary(fit, fit.measures = TRUE, standardized = T)
# Compute factor scores
factor_scores <- lavPredict(fit, type="lv", method="ebm")
# Update 'completedf' by removing the old variables, keeping a few specific ones,
# and adding in the new factor scores
fit <- fit %>%
select(-all_of(EGAdimensions$names)) %>%
bind_cols(factor_scores)
factor_scores
fit
fit
fit
# load the necessary packages
suppressPackageStartupMessages(library(lavaan, quietly=TRUE, warn.conflicts=FALSE))
library(readr, quietly=TRUE, warn.conflicts=FALSE)  # Data import
library(psych, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
library(dplyr, quietly=TRUE, warn.conflicts=FALSE)
library(purrr, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
source("Source/DataPreparation/functions.R")
# Importing the two datasets
completedf <-read_csv("data\\processed\\df_reversed.csv", show_col_types = FALSE)
EGAdimensions <-suppressMessages(read_csv2("data\\EGAdimensions.csv", show_col_types = FALSE))
# Removing the variables to remove numerical and dichotomic
completedf <- completedf %>% select(EGAdimensions$names,eng_energy,eng_enthusiastic,eng_timeflies)
# Creating the string for the model
model_string <- map_chr(unique(EGAdimensions$EGA_dimension), function(dimension) {
factor_variables <- EGAdimensions$names[EGAdimensions$EGA_dimension == dimension]
# If there are only two observed variables, fix lambda
if(length(factor_variables) == 2) {
return(paste(dimension, " =~ lambda*", factor_variables[1], "+ lambda*", factor_variables[2], ";"))
}
# Otherwise, return the regular line
paste(dimension, " =~ ", paste(factor_variables, collapse = " + "), ";")
})
# Append the additional line to model_string
model_string <- paste(c(model_string, "Work Engagement =~ eng_energy + eng_enthusiastic + eng_timeflies;"), collapse = " ")
fit <- cfa(model_string, data=completedf, estimator="WLSMV", missing = "pairwise",ordered=TRUE)
summary(fit, fit.measures = TRUE, standardized = T)
# Compute factor scores
factor_scores <- lavPredict(fit, type="lv", method="ebm")
# Update 'completedf' by removing the old variables, keeping a few specific ones,
# and adding in the new factor scores
completedf <- completedf %>%
select(-all_of(EGAdimensions$names)) %>%
bind_cols(factor_scores)
completedf
View(completedf)
# load the necessary packages
suppressPackageStartupMessages(library(lavaan, quietly=TRUE, warn.conflicts=FALSE))
library(readr, quietly=TRUE, warn.conflicts=FALSE)  # Data import
library(psych, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
library(dplyr, quietly=TRUE, warn.conflicts=FALSE)
library(purrr, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
source("Source/DataPreparation/functions.R")
# Importing the two datasets
completedf <-read_csv("data\\processed\\df_reversed.csv", show_col_types = FALSE)
EGAdimensions <-suppressMessages(read_csv2("data\\EGAdimensions.csv", show_col_types = FALSE))
# Removing the variables to remove numerical and dichotomic
cfacompletedf <- completedf %>% select(EGAdimensions$names,eng_energy,eng_enthusiastic,eng_timeflies)
# Creating the string for the model
model_string <- map_chr(unique(EGAdimensions$EGA_dimension), function(dimension) {
factor_variables <- EGAdimensions$names[EGAdimensions$EGA_dimension == dimension]
# If there are only two observed variables, fix lambda
if(length(factor_variables) == 2) {
return(paste(dimension, " =~ lambda*", factor_variables[1], "+ lambda*", factor_variables[2], ";"))
}
# Otherwise, return the regular line
paste(dimension, " =~ ", paste(factor_variables, collapse = " + "), ";")
})
# Append the additional line to model_string
model_string <- paste(c(model_string, "Work Engagement =~ eng_energy + eng_enthusiastic + eng_timeflies;"), collapse = " ")
fit <- cfa(model_string, data=cfacompletedf, estimator="WLSMV", missing = "pairwise",ordered=TRUE)
summary(fit, fit.measures = TRUE, standardized = T)
# Compute factor scores
factor_scores <- lavPredict(fit, type="lv", method="ebm")
# Update 'completedf' by removing the old variables, keeping a few specific ones,
# and adding in the new factor scores
completedf <- completedf %>%
select(-all_of(EGAdimensions$names)) %>%
bind_cols(factor_scores)
View(completedf)
View(completedf)
completedf <- completedf %>%
select(-all_of(EGAdimensions$names)) %>%
select(-c(eng_energy, eng_enthusiastic, eng_timeflies)) %>%
bind_cols(factor_scores)
# load the necessary packages
suppressPackageStartupMessages(library(lavaan, quietly=TRUE, warn.conflicts=FALSE))
library(readr, quietly=TRUE, warn.conflicts=FALSE)  # Data import
library(psych, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
library(dplyr, quietly=TRUE, warn.conflicts=FALSE)
library(purrr, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
source("Source/DataPreparation/functions.R")
# Importing the two datasets
completedf <-read_csv("data\\processed\\df_reversed.csv", show_col_types = FALSE)
EGAdimensions <-suppressMessages(read_csv2("data\\EGAdimensions.csv", show_col_types = FALSE))
# Removing the variables to remove numerical and dichotomic
cfacompletedf <- completedf %>% select(EGAdimensions$names,eng_energy,eng_enthusiastic,eng_timeflies)
# Creating the string for the model
model_string <- map_chr(unique(EGAdimensions$EGA_dimension), function(dimension) {
factor_variables <- EGAdimensions$names[EGAdimensions$EGA_dimension == dimension]
# If there are only two observed variables, fix lambda
if(length(factor_variables) == 2) {
return(paste(dimension, " =~ lambda*", factor_variables[1], "+ lambda*", factor_variables[2], ";"))
}
# Otherwise, return the regular line
paste(dimension, " =~ ", paste(factor_variables, collapse = " + "), ";")
})
# Append the additional line to model_string
model_string <- paste(c(model_string, "Work Engagement =~ eng_energy + eng_enthusiastic + eng_timeflies;"), collapse = " ")
fit <- cfa(model_string, data=cfacompletedf, estimator="WLSMV", missing = "pairwise",ordered=TRUE)
summary(fit, fit.measures = TRUE, standardized = T)
# Compute factor scores
factor_scores <- lavPredict(fit, type="lv", method="ebm")
# load the necessary packages
suppressPackageStartupMessages(library(lavaan, quietly=TRUE, warn.conflicts=FALSE))
library(readr, quietly=TRUE, warn.conflicts=FALSE)  # Data import
library(psych, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
library(dplyr, quietly=TRUE, warn.conflicts=FALSE)
library(purrr, quietly=TRUE, warn.conflicts=FALSE)
print(getwd())
source("Source/DataPreparation/functions.R")
# Importing the two datasets
completedf <-read_csv("data\\processed\\df_reversed.csv", show_col_types = FALSE)
EGAdimensions <-suppressMessages(read_csv2("data\\EGAdimensions.csv", show_col_types = FALSE))
# Removing the variables to remove numerical and dichotomic
cfacompletedf <- completedf %>% select(EGAdimensions$names,eng_energy,eng_enthusiastic,eng_timeflies)
# Creating the string for the model
model_string <- map_chr(unique(EGAdimensions$EGA_dimension), function(dimension) {
factor_variables <- EGAdimensions$names[EGAdimensions$EGA_dimension == dimension]
# If there are only two observed variables, fix lambda
if(length(factor_variables) == 2) {
return(paste(dimension, " =~ lambda*", factor_variables[1], "+ lambda*", factor_variables[2], ";"))
}
# Otherwise, return the regular line
paste(dimension, " =~ ", paste(factor_variables, collapse = " + "), ";")
})
# Append the additional line to model_string
model_string <- paste(c(model_string, "Work Engagement =~ eng_energy + eng_enthusiastic + eng_timeflies;"), collapse = " ")
fit <- cfa(model_string, data=cfacompletedf, estimator="WLSMV", missing = "pairwise",ordered=TRUE)
summary(fit, fit.measures = TRUE, standardized = T)
# Compute factor scores
factor_scores <- lavPredict(fit, type="lv", method="ebm")
# Update 'completedf' by removing the old variables, keeping a few specific ones,
# and adding in the new factor scores
finaldf <- completedf %>%
select(-all_of(EGAdimensions$names)) %>%
select(-c(eng_energy, eng_enthusiastic, eng_timeflies)) %>%
bind_cols(factor_scores)
View(finaldf)
View(completedf)
View(cfacompletedf)
print("Saving Updated datasets")
# Write the updated 'train_df' and 'test_df' back out to .csv files
write_csv(finaldf, "data\\processed\\factordatasets\\CFAcompletedf.csv")
print("Done")
